apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${APPLICATION_NAME}-template
labels:
  template: ${APPLICATION_NAME}-template
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    namespace: ${ENVIRONMENT}
    labels:
      app: ${APPLICATION_NAME}
      app.kubernetes.io/name: ${APPLICATION_NAME}
      app.kubernetes.io/part-of: ${APPLICATION_NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
#     triggers:
#       - type: ConfigChange
#       - type: ImageChange
#         imageChangeParams:
#           automatic: true
#           containerNames:
#             - ${APPLICATION_NAME}
#           from:
#             kind: DockerImage   #ImageStreamTag
#             name: femmyreuben/${APPLICATION_NAME}:latest 
          #lastTriggeredImage: ""
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
          - name: ${APPLICATION_NAME}
            image: femmyreuben/${IMAGESTREAM}:${IMAGETAG}
            ports:
              - containerPort: 3000
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /api/health
                port: 3000
                scheme: HTTP
              initialDelaySeconds: 30
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            livenessProbe:
              httpGet:
                path: /api/health
                port: 3000
                scheme: HTTP
              initialDelaySeconds: 40
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: Always
        triggers:
          - type: ImageChange
            imageChangeParams:
              automatic: true
              containerNames:
                - ${APPLICATION_NAME}
              from:
                kind: DockerImage
                name: femmyreuben/${IMAGESTREAM}:${IMAGETAG}
              lastTriggeredImage: ""
          - type: ConfigChange
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
        
        
parameters:
  - description: Application Name
    displayName: AppName
    name: APPLICATION_NAME
    required: true
    value: 'expressjs-api'
  - description: Environment
    displayName: Environment
    name: ENVIRONMENT
    required: true
    value: dev
  - description: Imagestream
    displayName: Imagestream
    name: IMAGESTREAM
    required: true
    value: 'expressjs-api'
  - description: Imagetag
    displayName: Imagetag
    name: IMAGETAG
    required: true
    value: 'latest'
